{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","scenes/Home/CodeArea/index.js","services/Utils/chartOptions.js","scenes/Home/Chart/index.js","services/Utils/defaultInput.js","services/InputParser/eventSetup.js","services/InputParser/jsonParser.js","scenes/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","Footer","props","onClick","this","CodeArea","onMouseDown","event","document","body","addEventListener","onMouseMove","window","onMouseUp","prevY","parseInt","editorRef","current","style","height","posY","console","log","clientY","newY","h","innerHeight","documentElement","clientHeight","removeEventListener","onChange","input","getInput","createRef","default","defaultValue","ref","mode","theme","placeholder","width","value","showPrintMargin","wrapEnabled","options","maintainAspectRatio","legend","display","position","reverse","align","labels","fontSize","fontStyle","usePointStyle","padding","fontFamily","scales","xAxes","type","time","unit","displayFormats","minute","gridLines","drawBorder","yAxes","ticks","maxTicksLimit","stepSize","beginAtZero","LineGraph","chartRef","Chart","NewLegend","Legend","extend","afterFit","myChart","data","datasets","generateLegend","update","defaultInput","EventSetup","group","select","begin","end","spanLimits","groupName","startGroup","startSelect","reduce","partialName","currentGroupItem","hasOwnProperty","getGroupName","currentSelect","lineName","timezoneDiff","Date","timestamp","getTimezoneOffset","point","x","y","insertDataset","has","get","push","set","firstPoint","label","color","Math","floor","random","generateColorHSL","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","fill","lineTension","borderDashOffset","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","borderWidth","createDataset","JSONParser","eventsJson","Map","isStopped","aux","processSpan","processData","Home","generateChart","dataStr","replace","jsonObj","parse","parser","processList","array","Array","from","values","setState","chartDatasets","state","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4XAgBeA,G,6LAVP,OACI,4BAAQC,UAAU,UACd,sD,GALKC,IAAMC,YCmBZC,G,kBAjBX,WAAYC,GAAQ,qEACVA,I,sEAIN,OACI,4BAAQJ,UAAU,UACd,yBAAKA,UAAU,kBACX,4BAAQK,QAASC,KAAKF,MAAMC,SAA5B,wB,GAVCJ,IAAMC,Y,iBCoFZK,G,8BA7EX,WAAYH,GAAQ,IAAD,8BACf,4CAAMA,KAaVI,YAAc,SAACC,GACXC,SAASC,KAAKC,iBAAiB,YAAa,EAAKC,aACjDC,OAAOF,iBAAiB,UAAW,EAAKG,WAExC,EAAKC,MAAQC,SAAS,EAAKC,UAAUC,QAAQC,MAAMC,QAEnD,IAAMC,EAAO,EAAKN,MAClBO,QAAQC,IAAI,SAAUF,IArBP,EAwBnBT,YAAc,SAACJ,GACX,IAAIa,EAAOb,EAAMgB,QACbC,EAAO,EAAKV,OAASM,EAAO,EAAKN,OAEjCW,EAAIb,OAAOc,aACZlB,SAASmB,gBAAgBC,cACzBpB,SAASC,KAAKmB,aAEjBP,QAAQC,IAAIG,GAERD,EAAQC,EAAE,MACVD,EAAOC,EAAE,KAGb,EAAKT,UAAUC,QAAQC,MAAMC,OAASK,EAAO,MAtC9B,EAyCnBX,UAAY,WACRL,SAASC,KAAKoB,oBAAoB,YAAa,EAAKlB,aACpDC,OAAOiB,oBAAoB,UAAW,EAAKhB,WAG3CQ,QAAQC,IAAI,OA9CG,EAiDnBQ,SAAW,SAACC,GACR,EAAK7B,MAAM8B,SAASD,IA/CpB,EAAKf,UAAYjB,IAAMkC,YAHR,E,iFAOf7B,KAAKY,UAAUC,QAAQC,MAAMC,OAAS,QACtCf,KAAK8B,QAAU9B,KAAKF,MAAMiC,e,+EA+C1B,OACI,yBAAKrC,UAAU,iBAAiBsC,IAAKhC,KAAKY,WACtC,kBAAC,IAAD,CAAWlB,UAAU,SACjBuC,KAAK,aACLC,MAAM,UACNC,YAAY,uBACZC,MAAM,OACNrB,OAAO,OACPW,SAAU1B,KAAK0B,SACfW,MAASrC,KAAKF,MAAMuC,MACpBN,aAAc/B,KAAKF,MAAMiC,aAEzBO,iBAAmB,EACnBC,aAAmB,IAEvB,yBAAK7C,UAAU,UAAUQ,YAAcF,KAAKE,mB,GAxErCP,IAAMC,Y,gBCRlB4C,G,MAAU,CACjBC,qBAAqB,EAErBC,OAAQ,CACJC,SAAS,EACTC,SAAU,QACVC,SAAS,EACTC,MAAO,QAQPC,OAAQ,CAEJC,SAAU,GACVC,UAAW,OACXC,eAAe,EACfC,QAAS,GACTC,WAAY,kCAGpBC,OAAQ,CACJC,MAAO,CACH,CACIC,KAAM,OACNC,KAAM,CACFC,KAAM,SACNC,eAAgB,CACZC,OAAQ,UAGhBC,UAAW,CACPjB,SAAS,EACTkB,YAAY,KAIxBC,MAAO,CACH,CACIF,UAAW,CACPC,YAAY,GAEhBE,MAAO,CACHC,cAAe,EACfC,SAAU,GACVtB,SAAS,EACTuB,aAAa,QCGlBC,E,YAzCX,WAAYrE,GAAQ,IAAD,8BACf,4CAAMA,KAEDsE,SAAWzE,IAAMkC,YAHP,E,iFAOfwC,IAAMC,UAAYD,IAAME,OAAOC,OAAO,CAClCC,SAAU,WACNzE,KAAKoC,MAAQpC,KAAKoC,MAAQ,OAIlCpC,KAAK0E,QAAU,IAAIL,IAAMrE,KAAKoE,SAASvD,QAAS,CAC5C0C,KAAM,OACNoB,KAAM,CACFC,SAAU5E,KAAKF,MAAM8E,UAEzBpC,QAASA,IAEbxC,KAAK0E,QAAQG,mB,2CAIb7E,KAAK0E,QAAQC,KAAKC,SAAW5E,KAAKF,MAAM8E,SACxC5E,KAAK0E,QAAQI,W,+BAIb,OACI,yBAAKpF,UAAU,WACX,4BAAQA,UAAU,gBACdsC,IAAKhC,KAAKoE,gB,GAlCNzE,IAAMC,WCTjBmF,EAAY,osC,QCAJC,E,WAEjB,WAAY7E,EAAOyE,GAAW,oBAC1B5E,KAAKiF,MAAQ9E,EAAM8E,MACnBjF,KAAKkF,OAAS/E,EAAM+E,OACpBlF,KAAK4E,SAAWA,E,wDAURzE,GAKR,MAAQ,CAHQA,EAATgF,MACOhF,EAAPiF,O,kCAMCjF,EAAOkF,GAMf,IAAMC,EA2Bd,SAAsBnF,EAAOoF,EAAYC,GAQrC,OAAQD,EAAWE,QAPH,SAACC,EAAaC,GAC1B,OAAIxF,EAAMyF,eAAeD,GACdD,EAAc,IAAMvF,EAAMwF,GAE9BD,IAGwB,IAnCbG,CAAa1F,EAAOH,KAAKiF,MAAOjF,KAAKkF,QAN5B,uBAQ3B,YAA0BlF,KAAKkF,OAA/B,+CAAuC,CAAC,IAA/BY,EAA8B,QAEnC,GAAK3F,EAAMyF,eAAeE,GAA1B,CAIA,IAAMC,EAAYT,EAAY,IAAMQ,EAGhCE,EAAmD,GADnC,IAAIC,KAAK9F,EAAM+F,WACFC,oBAA2B,IAEtDC,EAAQ,CACVC,EAAGlG,EAAM+F,UAAYF,EACrBM,EAAGnG,EAAM2F,IAGbS,EAAcvG,KAAK4E,SAAUmB,EAAUK,KAxBhB,qF,8CA6CnC,SAASG,EAAc3B,EAAUmB,EAAUK,GACnCxB,EAAS4B,IAAIT,GACbnB,EAAS6B,IAAIV,GAAUpB,KAAK+B,KAAKN,GAGjCxB,EAAS+B,IAAIZ,EAKrB,SAAuBa,EAAYb,GAE/B,IAAMc,EAAQd,EACRe,EA+BV,WACI,IAAMzF,EAAI0F,KAAKC,MAAsB,IAAhBD,KAAKE,UAI1B,MAAM,OAAN,OAAc5F,EAAd,YAHU,IAGV,aAFU,GAEV,MApCc6F,GAEd,MAAO,CACHL,QAEAlC,KAAM,CAACiC,GACPO,gBAAiBL,EACjBM,YAAaN,EACbO,iBAAkBP,EAClBQ,0BAA2BR,EAE3BS,MAAM,EACNC,YAAa,EACbC,iBAAkB,EAClBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,GACvBC,YAAa,EACbC,eAAgB,EAChBC,YAAa,GA3BUC,CAAc5B,EAAOL,I,ICxE/BkC,E,WAEjB,WAAYC,GAAa,oBACrBlI,KAAKkI,WAAaA,EAClBlI,KAAK4E,SAAW,IAAIuD,I,0DAKpB,IAAIC,GAAY,EAFN,uBAoBV,YAAkBpI,KAAKkI,WAAvB,+CAAmC,CAAC,IAA3B/H,EAA0B,QAExBoD,EAAQpD,EAARoD,KAEP,GAAG6E,EAAU,CACT,GAAa,UAAT7E,EACA,SAEJ6E,GAAY,EAMhB,OAAQ7E,GAEJ,IAAK,QACDvD,KAAKqI,IAAM,IAAIrD,EAAW7E,EAAOH,KAAK4E,UACtC,MAGJ,IAAK,OACD5E,KAAKqI,IAAIC,YAAYnI,GACrB,MAGJ,IAAK,OACDH,KAAKqI,IAAIE,YAAYpI,GACrB,MAGJ,IAAK,OAEDiI,GAAY,EACZ,MAGJ,QACInH,QAAQC,IAAI,qBA1Dd,uF,KCuDHsH,E,YAnDX,WAAY1I,GAAQ,IAAD,8BACf,4CAAMA,KAeV2I,cAAgB,WAEZ,IAAMC,EAAU,IAAM,EAAK/G,MAAMgH,QAAQ,MAAO,KAAO,IACjDC,EAAUC,gBAAMH,GACtB,EAAKI,OAAS,IAAIb,EAAWW,GAC7B,EAAKE,OAAOC,YAAYH,GACxB,IAAII,EAAQC,MAAMC,KAAK,EAAKJ,OAAOlE,SAASuE,UAG5C,EAAKC,SAAS,CACV/G,MAAO,EAAKV,MACZ0H,cAAeL,IAChB,WACC/H,QAAQC,IAAI,EAAKoI,MAAMjH,OACvBpB,QAAQC,IAAI,EAAKoI,MAAMD,mBA9BZ,EAmCnBzH,SAAW,SAACD,GACR,EAAKA,MAAQA,GAjCb,EAAK2H,MAAQ,CACTvE,aAAcA,EACd1C,MAAO0C,EACPsE,cAAe,IAGnB,EAAK1H,MAAQoD,EATE,E,iFAaf/E,KAAKyI,kB,+BA2BL,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAU7G,SAAU5B,KAAK4B,SAAUS,MAAOrC,KAAKsJ,MAAMjH,MAAON,aAAc/B,KAAKsJ,MAAMvE,eACrF,kBAAC,EAAD,CAAWH,SAAU5E,KAAKsJ,MAAMD,gBAChC,kBAAC,EAAD,CAAQtJ,QAASC,KAAKyI,qB,GA/CnB9I,IAAMC,WCIV2J,E,iLARX,OACE,yBAAK7J,UAAU,OACb,kBAAC,EAAD,W,GAJUC,IAAMC,WCOJ4J,QACW,cAA7BhJ,OAAOiJ,SAASC,UAEe,UAA7BlJ,OAAOiJ,SAASC,UAEhBlJ,OAAOiJ,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACL,kBAAC,EAAD,MACAzJ,SAAS0J,eAAe,SDuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrJ,QAAQqJ,MAAMA,EAAMC,c","file":"static/js/main.6624477f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div>\r\n                    Joao's Challenge\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './styles.css';\r\n\r\nclass Footer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"button_wrapper\">\r\n                    <button onClick={this.props.onClick}>\r\n                        GENERATE CHART\r\n                    </button>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\n\r\nimport './styles.css'\r\n\r\nclass CodeArea extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.editorRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editorRef.current.style.height = \"235px\";\r\n        this.default = this.props.defaultValue;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onMouseDown = (event) => {\r\n        document.body.addEventListener('mousemove', this.onMouseMove);\r\n        window.addEventListener('mouseup', this.onMouseUp);\r\n    \r\n        this.prevY = parseInt(this.editorRef.current.style.height);; \r\n        \r\n        const posY = this.prevY;\r\n        console.log(\"down: \", posY);\r\n    }\r\n\r\n    onMouseMove = (event) => {\r\n        let posY = event.clientY;\r\n        let newY = this.prevY + (posY - this.prevY);\r\n\r\n        var h = window.innerHeight\r\n        || document.documentElement.clientHeight\r\n        || document.body.clientHeight;\r\n\r\n        console.log(h);\r\n\r\n        if (newY > (h-500)) {\r\n            newY = h-500;\r\n        }\r\n       \r\n        this.editorRef.current.style.height = newY + \"px\";\r\n    }\r\n\r\n    onMouseUp = () => {\r\n        document.body.removeEventListener('mousemove', this.onMouseMove);\r\n        window.removeEventListener('mouseup', this.onMouseUp);\r\n\r\n\r\n        console.log(\"up\");\r\n    }\r\n\r\n    onChange = (input) => {\r\n        this.props.getInput(input);\r\n    }\r\n  \r\n    /*https://github.com/securingsincity/react-ace/blob/master/docs/Ace.md*/\r\n    render() {\r\n        return (\r\n            <div className=\"editor-wrapper\" ref={this.editorRef}>\r\n                <AceEditor className=\"editor\"\r\n                    mode=\"javascript\"\r\n                    theme=\"monokai\"\r\n                    placeholder=\"Input your data here\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    onChange={this.onChange}\r\n                    value = {this.props.value}\r\n                    defaultValue={this.props.defaultValue}\r\n\r\n                    showPrintMargin = {false}\r\n                    wrapEnabled     = {true}\r\n                />\r\n                <div className=\"resizer\" onMouseDown= {this.onMouseDown}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CodeArea;","export var options = {\r\n    maintainAspectRatio: false,\r\n\r\n    legend: {\r\n        display: true,\r\n        position: \"right\",\r\n        reverse: false,\r\n        align: 'start',\r\n        /*\r\n        legendCallback: (myChart) => {\r\n            let html = \"<ul><li> teste </li></ul>\";\r\n            return html;\r\n        },\r\n        */\r\n        \r\n        labels: {\r\n            //fontColor: \"rgb(255, 99, 132)\",\r\n            fontSize: 12,\r\n            fontStyle: \"bold\",\r\n            usePointStyle: true,\r\n            padding: 18,\r\n            fontFamily: \"'Source Sans Pro', sans-serif\",\r\n        }\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'minute',\r\n                    displayFormats: {\r\n                        minute: 'HH:mm', //caps in hour - 24h format\r\n                    },\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false,\r\n                },\r\n            }\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    drawBorder: false,\r\n                },\r\n                ticks: {\r\n                    maxTicksLimit: 5,\r\n                    stepSize: 0.1,\r\n                    display: false,\r\n                    beginAtZero: true,\r\n                }\r\n            }\r\n        ]\r\n    }\r\n};","import React from 'react'\r\n\r\nimport Chart from 'chart.js'\r\nimport './styles.css'\r\n\r\nimport { options } from '../../../services/Utils/chartOptions.js'\r\n\r\n\r\n//https://www.chartjs.org/docs/latest/charts/line.html#line-styling\r\nclass LineGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        Chart.NewLegend = Chart.Legend.extend({\r\n            afterFit: function () {\r\n                this.width = this.width + 100;\r\n            },\r\n        });\r\n\r\n        this.myChart = new Chart(this.chartRef.current, {\r\n            type: \"line\",\r\n            data: {\r\n                datasets: this.props.datasets,\r\n            },\r\n            options: options,\r\n        });\r\n        this.myChart.generateLegend();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.myChart.data.datasets = this.props.datasets;\r\n        this.myChart.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"myChart\">\r\n                <canvas className=\"myChartCanvas\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LineGraph;","export const defaultInput = `{type: 'start', timestamp: 1519862400000, select: ['min_response_time', 'max_response_time'], group: ['os', 'browser']}\r\n{type: 'span', timestamp: 1519862400000, begin: 1519862400000, end: 1519862460000}\r\n{type: 'data', timestamp: 1519862400000, os: 'linux', browser: 'chrome', min_response_time: 0.1, max_response_time: 1.3}\r\n{type: 'data', timestamp: 1519862400000, os: 'mac', browser: 'chrome', min_response_time: 0.2, max_response_time: 1.2}\r\n{type: 'data', timestamp: 1519862400000, os: 'mac', browser: 'firefox', min_response_time: 0.3, max_response_time: 1.2}\r\n{type: 'data', timestamp: 1519862400000, os: 'linux', browser: 'firefox', min_response_time: 0.1, max_response_time: 1.0}\r\n{type: 'data', timestamp: 1519862460000, os: 'linux', browser: 'chrome', min_response_time: 0.2, max_response_time: 0.9}\r\n{type: 'data', timestamp: 1519862460000, os: 'mac', browser: 'chrome', min_response_time: 0.1, max_response_time: 1.0}\r\n{type: 'data', timestamp: 1519862460000, os: 'mac', browser: 'firefox', min_response_time: 0.2, max_response_time: 1.1}\r\n{type: 'data', timestamp: 1519862460000, os: 'linux', browser: 'firefox', min_response_time: 0.3, max_response_time: 1.4}\r\n{type: 'stop', timestamp: 1519862400000}`;","export default class EventSetup {\r\n\r\n    constructor(event, datasets) {\r\n        this.group = event.group;\r\n        this.select = event.select;\r\n        this.datasets = datasets;\r\n    }\r\n\r\n    /*\r\n    processStart(event) {\r\n        const {group} = event;\r\n        const {select} = event;\r\n    };\r\n    */\r\n\r\n    processSpan(event) {\r\n        //update span limits\r\n        const {begin} = event;\r\n        const {end} = event;\r\n\r\n        return ([begin, end]);\r\n    }\r\n\r\n\r\n    processData(event, spanLimits) {\r\n\r\n        /*if (!verifyLimits) {\r\n            return;\r\n        }*/\r\n\r\n        const groupName = getGroupName(event, this.group, this.select);\r\n\r\n        for (let currentSelect of this.select) {\r\n\r\n            if (!event.hasOwnProperty(currentSelect)) {\r\n                continue;\r\n            }\r\n\r\n            const lineName = (groupName + \" \" + currentSelect);\r\n\r\n            let timestampDate = new Date(event.timestamp);\r\n            let timezoneDiff = timestampDate.getTimezoneOffset() * 60 * 1000;\r\n\r\n            const point = {\r\n                x: event.timestamp + timezoneDiff,\r\n                y: event[currentSelect],\r\n            };\r\n\r\n            insertDataset(this.datasets, lineName, point);\r\n        }\r\n    }\r\n\r\n    processStop() {\r\n\r\n    }\r\n}\r\n\r\nfunction getGroupName(event, startGroup, startSelect) {\r\n    const reducer = (partialName, currentGroupItem) => {\r\n        if (event.hasOwnProperty(currentGroupItem)) {\r\n            return partialName + \" \" + event[currentGroupItem];\r\n        }\r\n        return partialName;\r\n    };\r\n\r\n    return (startGroup.reduce(reducer, \"\")); //FIX a legenda entra com um espaco antes\r\n}\r\n\r\n\r\nfunction insertDataset(datasets, lineName, point) {\r\n    if (datasets.has(lineName)) {\r\n        datasets.get(lineName).data.push(point)\r\n    }\r\n    else {\r\n        datasets.set(lineName, createDataset(point, lineName));\r\n    }\r\n}\r\n\r\n\r\nfunction createDataset(firstPoint, lineName) {\r\n\r\n    const label = lineName;\r\n    const color = generateColorHSL();\r\n\r\n    return {\r\n        label,\r\n\r\n        data: [firstPoint],\r\n        backgroundColor: color,\r\n        borderColor: color,\r\n        pointBorderColor: color,\r\n        pointHoverBackgroundColor: color,\r\n\r\n        fill: false,\r\n        lineTension: 0.0,\r\n        borderDashOffset: 0.0,\r\n        pointBorderWidth: 6,\r\n        pointHoverRadius: 6,\r\n        pointHoverBorderWidth: 0.1,\r\n        pointRadius: 3,\r\n        pointHitRadius: 3,\r\n        borderWidth: 2,\r\n    }\r\n}\r\n\r\nfunction generateColorRGBA() {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n\r\n    return `rgba(${r}, ${g}, ${b}, 1)`;\r\n}\r\n\r\nfunction generateColorHSL() {\r\n    const h = Math.floor(Math.random() * 361);\r\n    const s = 100; \r\n    const l = 50;\r\n    \r\n    return `hsl(${h},${s}%,${l}%)`;\r\n}","import EventSetup from './eventSetup.js';\r\n\r\nexport default class JSONParser {\r\n\r\n    constructor(eventsJson) {\r\n        this.eventsJson = eventsJson;\r\n        this.datasets = new Map();\r\n    }\r\n\r\n    processList() {\r\n\r\n        let isStopped = false;\r\n        /*\r\n        //search start index \r\n        let indexStart = this.eventsJson.findIndex(event => event.type == 'start');\r\n        //search span index\r\n        let indexSpan = this.eventsJson.findIndex(event => event.type == 'span');\r\n        console.log(indexSpan);\r\n        //search stop index\r\n        //let indexStop = this.eventsJson.find(event => event.type = 'stop'); //retorna o objeto\r\n        let indexStop = this.eventsJson.findIndex(event => event.type = 'stop');\r\n\r\n        if (indexSpan < indexStop) {\r\n            let spanLimits= [this.eventsJson[indexSpan].begin, this.eventsJson[indexSpan].end];\r\n            this.aux.processSpan(event);\r\n        \r\n        }\r\n        */\r\n\r\n        for (let event of this.eventsJson) {\r\n\r\n            const {type} = event;\r\n\r\n            if(isStopped){\r\n                if (type !== 'start'){\r\n                    continue;\r\n                }\r\n                isStopped = false;\r\n            }\r\n\r\n            \r\n            //FIX: error if not started\r\n\r\n            switch (type) {\r\n\r\n                case 'start': {\r\n                    this.aux = new EventSetup(event, this.datasets);\r\n                    break;\r\n                }\r\n\r\n                case 'span': {\r\n                    this.aux.processSpan(event);\r\n                    break;\r\n                }\r\n\r\n                case 'data': {\r\n                    this.aux.processData(event);\r\n                    break;\r\n                }\r\n\r\n                case 'stop': {\r\n                    //this.aux.processStop(event);\r\n                    isStopped = true;\r\n                    break;\r\n                }\r\n\r\n                default: {\r\n                    console.log(\"Type not exists\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../../components/Header'\r\nimport Footer from '../../components/Footer'\r\nimport CodeArea from './CodeArea'\r\nimport LineGraph from './Chart';\r\n\r\nimport { defaultInput } from '../../services/Utils/defaultInput.js'\r\nimport { parse } from 'dirty-json';\r\n\r\nimport JSONParser from '../../services/InputParser/jsonParser.js'\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            defaultInput: defaultInput,\r\n            value: defaultInput,\r\n            chartDatasets: [],\r\n        };\r\n\r\n        this.input = defaultInput;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateChart();\r\n    }\r\n\r\n    generateChart = () => {\r\n        //Encapsulate this block\r\n        const dataStr = \"[\" + this.input.replace(/\\n/g, \",\") + \"]\";\r\n        const jsonObj = parse(dataStr);\r\n        this.parser = new JSONParser(jsonObj);\r\n        this.parser.processList(jsonObj);\r\n        let array = Array.from(this.parser.datasets.values());\r\n        //\r\n\r\n        this.setState({\r\n            value: this.input,\r\n            chartDatasets: array\r\n        }, () => {\r\n            console.log(this.state.value);\r\n            console.log(this.state.chartDatasets);\r\n        });\r\n    }\r\n\r\n    //Lifting state up\r\n    getInput = (input) => {\r\n        this.input = input;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <CodeArea getInput={this.getInput} value={this.state.value} defaultValue={this.state.defaultInput} />\r\n                <LineGraph datasets={this.state.chartDatasets} />\r\n                <Footer onClick={this.generateChart} />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css';\n\nimport Home from './scenes/Home';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}